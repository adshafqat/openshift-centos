Adeels-MacBook-Pro:~ adeelshafqat$ cat pod.yaml 
apiVersion: v1
kind: Pod
metadata:
 name: nginxw
spec:
 containers:
  - name: nginx
    image: nginx



Config Map as a literal

oc create configmap special-config --from-literal=user=adeel

Attaching Config Map as a env variable

apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
  - name: nginx
    image: nginx
    env:
     - name: USER_NAME
       valueFrom:
        configMapKeyRef:
         name: special-config
         key: user




Attaching Config Map as a volume Mount

oc create configmap property --from-file=application.properties


Adeels-MacBook-Pro:~ adeelshafqat$ cat pod-config-map.yaml
apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
  - name: nginx
    image: nginx
    volumeMounts:
     - name: propfile
       mountPath: /dev/config
 volumes:
  - name: propfile
    configMap:
     name: property 



Adeels-MacBook-Pro:~ adeelshafqat$ cat pod-env-config.yaml
apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
  - name: nginx
    image: nginx
    volumeMounts:
     - name: propfile
       mountPath: /dev/config
    env:
     - name: USER_NAME
       value: "adeel" 
 volumes:
  - name: propfile
    configMap:
     name: property 



echo 'adee' | base64

Adeels-MacBook-Pro:~ adeelshafqat$ cat secRt.yaml 
apiVersion: v1
kind: Secret
metadata:
 name: top-secret
data:
 password: YWRlZQo=



Adeels-MacBook-Pro:~ adeelshafqat$ cat pod-secret.yaml 
apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
  - name: nginx
    image: nginx
    volumeMounts:
     - name: prop
       mountPath: /dev/config
 volumes:
  - name: prop
    secret:
     secretName: top-secret 





NFS PV Creation

Adeels-MacBook-Pro:~ adeelshafqat$ cat nfs-pv.yaml 
apiVersion: v1
kind: PersistentVolume
metadata:
 name: my-nfs-pv
spec:
 capacity:
  storage: 1G
 accessModes:
  - ReadWriteOnce
 nfs:
  path: /tmp
  server: localhost
 persistentVolumeReclaimPolicy: Recycle


Host Path PV Creation

Adeels-MBP:~ adeelshafqat$ cat nfs-pv.yaml 
apiVersion: v1
kind: PersistentVolume
metadata:
 name: my-nfs-pv
spec:
 capacity:
  storage: 1Gi
 accessModes:
  - ReadWriteOnce
 hostPath:
  path: "/tmp"
 persistentVolumeReclaimPolicy: Recycle


Adeels-MacBook-Pro:~ adeelshafqat$ oc get pv
NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM     STORAGECLASS   REASON    AGE
my-nfs-pv   1G         RWO            Recycle          Available                                      5s

PVC Creation

Adeels-MBP:~ adeelshafqat$ cat nfs-pvc.yaml 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: my-nfs-pvc
spec:
 accessModes: 
  - ReadWriteOnce
 resources:
  requests:
   storage: 1Gi
 volumeName: my-nfs-pv

	
Adeels-MacBook-Pro:~ adeelshafqat$ oc get pvc
NAME         STATUS    VOLUME      CAPACITY   ACCESS MODES   STORAGECLASS   AGE
my-nfs-pvc   Bound     my-nfs-pv   1G         RWO                           1m


PVC in a Pod

Adeels-MBP:~ adeelshafqat$ cat pod-pvc.yaml 
apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
  - name: nginx
    image: nginx
    volumeMounts:
     - name: propfile
       mountPath: "/dev/tmp"
 volumes:
  - name: propfile
    persistentVolumeClaim:
     claimName: my-nfs-pvc






[adeelshafqat@master ~]$ cat service.yaml
apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
spec:
  ports:
  - port: 1


[adeelshafqat@master ~]$ cat endpoint.yaml 
apiVersion: v1
kind: Endpoints
metadata:
  name: glusterfs-cluster
subsets:
  - addresses:
      - ip: 172.16.8.31
    ports:
      - port: 1
  - addresses:
      - ip: 172.16.8.31
    ports:
      - port: 1 
  - addresses:
      - ip: 172.16.8.31
    ports:
      - port: 1
  - addresses:
      - ip: 172.16.8.31
    ports:
      - port: 1 


[adeelshafqat@master ~]$ cat pv.yaml 
apiVersion: v1
kind: PersistentVolume
metadata:
 name: my-nfs-pv
spec:
 capacity:
  storage: 1Gi
 accessModes:
  - ReadWriteOnce
 glusterfs:
   endpoints: glusterfs-cluster
   path: dist-rep-vol
   readOnly: false
 persistentVolumeReclaimPolicy: Recycle


[adeelshafqat@master ~]$ cat pvc.yaml 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: my-nfs-pvc
spec:
 accessModes:
  - ReadWriteOnce
 resources:
  requests:
   storage: 1Gi
 volumeName: my-nfs-pv


[adeelshafqat@master ~]$ cat pod.yaml 
apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
  - name: nginx
    image: nginx
    volumeMounts:
     - name: propfile
       mountPath: "/dev/tmp"
 volumes:
  - name: propfile
    persistentVolumeClaim:
     claimName: my-nfs-pvc



Issue:

the following error information was pulled from the glusterfs log to help diagnose this issue: 
[2019-08-04 03:03:57.028565] E [MSGID: 100026] [glusterfsd.c:2351:glusterfs_process_volfp] 0-: failed to construct the graph

That means Gluster client and server has different version.

Go to one of the Gluster server and run this command

gluster volume set $volname ctime off
For eg: gluster volume set dist-rep-vol ctime off


Issue:

If your pod can list file but not create files in Gluster server and giving permission error

Go to the master node

sh-4.2$ id root
uid=0(root) gid=0(root) groups=0(root)

oc edit ns my-project

change id value, allow ids from 0

openshift.io/sa.scc.uid-range: 0/10000

Restart application which is using pv (not openshift cluster)
